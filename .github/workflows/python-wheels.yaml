# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: python-wheels

# Build wheels on commit to main, or when requested
on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/python-wheels.yaml'
      - 'python/setup.py'
      - 'python/pyproject.toml'
      - 'python/bootstrap.py'
      - 'python/MANIFEST.in'
  push:
    branches:
      - main
      - 'maint-**'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  sdist:
    runs-on: "ubuntu-20.04"
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - uses: actions/setup-python@v5
    - name: Check that cmake is installed
      run: |
        cmake --version

    - name: Install packaging tools
      run: |
        pip install build twine

    - name: Set nanoarrow Python dev version
      if: github.ref == 'refs/heads/main'
      run: |
        python dev/release/release_tools.py set_python_dev_version

    - name: Build sdist
      run: |
        cd python
        python -m build --sdist

    - name: Check install from sdist
      run: |
        pip install python/dist/nanoarrow-*.tar.gz

    - name: Test import
      run: |
        python -c "import nanoarrow; print(nanoarrow.__version__)"

    - name: Run twine check
      run: |
        twine check --strict python/dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: release-sdist
        path: ./python/dist/nanoarrow-*.tar.gz

  wheels:
    needs: ["sdist"]
    name: ${{ matrix.config.label }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {os: "ubuntu-20.04", label: "pyodide", platform: "pyodide"}
          - {os: "ubuntu-20.04", label: "linux", platform: "auto"}
          - {os: "windows-2019", label: "windows", platform: "auto"}
          - {os: "macOS-13", label: "macOS", platform: "auto"}
          - {os: "macOS-14", label: "macOS-arm64", platform: "auto"}
          - {os: ["self-hosted", "arm"], label: "linux-arm64", platform: "auto"}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.21.1

      - name: Set nanoarrow Python dev version
        if: github.ref == 'refs/heads/main'
        run: |
          python dev/release/release_tools.py set_python_dev_version

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse python
        env:
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest {package}/tests -vv
          CIBW_PLATFORM: ${{ matrix.config.platform }}

      - uses: actions/upload-artifact@v4
        with:
          name: release-wheels-${{ matrix.config.label }}
          path: ./wheelhouse/*.whl


  upload_nightly:
    needs: ["sdist", "wheels"]
    name: Upload nightly packages
    runs-on: "ubuntu-20.04"
    if: github.repository == 'apache/arrow-nanoarrow' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: release-*
          merge-multiple: true
          path: dist

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "ruby"

      - name: Install gemfury client
        run: |
          # GH-36692: Pin gemfury due to wrong faraday dependency declaration.
          gem install gemfury -v 0.12.0

      - name: Upload packages to Gemfury
        shell: bash
        run: |
          fury push \
            --api-token=${NANOARROW_GEMFURY_TOKEN} \
            --as="arrow-nightlies" \
            dist/*
        env:
          NANOARROW_GEMFURY_TOKEN: ${{ secrets.NANOARROW_GEMFURY_TOKEN }}
