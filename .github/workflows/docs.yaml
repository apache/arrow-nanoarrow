# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/docs.yaml'
      - 'src/nanoarrow/**'
      - 'r/**'

jobs:
  docs:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # Probably a better way to do this, but for now do the vendor step manually
      - name: Vendor nanoarrow into the R package
        run: |
          cd r
          ./configure
      
      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pkgdown, local::.
          needs: website
          working-directory: r
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Install dependencies
        run: |
          sudo apt-get install doxygen
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
      
      - name: Run doxygen
        run: |
          cd src/apidoc
          doxygen
      
      - name: Regenerate index content from README
        run: |
          cd docs
          pandoc ../README.md --from markdown --to rst -s -o source/README_generated.rst
      
      - name: Run sphinx
        run: |
          cd docs
          sphinx-build source _build/html
      
      - name: Run pkgdown
        run: pkgdown::build_site_github_pages("r", dest_dir = "../docs/_build/html/r", new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      - name: Upload built documentation
        uses: actions/upload-artifact@main
        with:
          name: nanarrow-docs
          path: docs/_build/html

      - name: Clone gh-pages branch
        if: success() && github.repository == 'apache/arrow-nanoarrow' && github.ref == 'refs/heads/main'
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: pages-clone

      - name: Update development documentation
        if: success() && github.repository == 'apache/arrow-nanoarrow' && github.ref == 'refs/heads/main'
        env:
          DOC_TAG: "dev"
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          cd pages-clone
          if [ -d "$DOC_TAG" ]; then
            git rm -rf "$DOC_TAG"
          fi
          mkdir "$DOC_TAG"
          cp -R ../docs/_build/html/* "$DOC_TAG"
          touch .nojekyll
          git add .nojekyll
          git add *
          git commit --allow-empty -m"update documentation for tag $DOC_TAG"
          git push
          cd ..
